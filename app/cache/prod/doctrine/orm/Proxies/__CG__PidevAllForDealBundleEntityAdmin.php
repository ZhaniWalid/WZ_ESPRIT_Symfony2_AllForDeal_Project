<?php

namespace Proxies\__CG__\Pidev\AllForDealBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Admin extends \Pidev\AllForDealBundle\Entity\Admin implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'idAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'nomAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'prnmAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'ageAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'sexeAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'emailAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'loginAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'pwdAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'connect'];
        }

        return ['__isInitialized__', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'idAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'nomAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'prnmAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'ageAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'sexeAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'emailAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'loginAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'pwdAdmin', '' . "\0" . 'Pidev\\AllForDealBundle\\Entity\\Admin' . "\0" . 'connect'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Admin $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdAdmin()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdAdmin();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdAdmin', []);

        return parent::getIdAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomAdmin', []);

        return parent::getNomAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrnmAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrnmAdmin', []);

        return parent::getPrnmAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function getAgeAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgeAdmin', []);

        return parent::getAgeAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function getSexeAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSexeAdmin', []);

        return parent::getSexeAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailAdmin', []);

        return parent::getEmailAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function getLoginAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLoginAdmin', []);

        return parent::getLoginAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function getPwdAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPwdAdmin', []);

        return parent::getPwdAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdAdmin($idAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdAdmin', [$idAdmin]);

        return parent::setIdAdmin($idAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function setNomAdmin($nomAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomAdmin', [$nomAdmin]);

        return parent::setNomAdmin($nomAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function setPrnmAdmin($prnmAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrnmAdmin', [$prnmAdmin]);

        return parent::setPrnmAdmin($prnmAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function setAgeAdmin($ageAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgeAdmin', [$ageAdmin]);

        return parent::setAgeAdmin($ageAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function setSexeAdmin($sexeAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSexeAdmin', [$sexeAdmin]);

        return parent::setSexeAdmin($sexeAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailAdmin($emailAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailAdmin', [$emailAdmin]);

        return parent::setEmailAdmin($emailAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function setLoginAdmin($loginAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLoginAdmin', [$loginAdmin]);

        return parent::setLoginAdmin($loginAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function setPwdAdmin($pwdAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPwdAdmin', [$pwdAdmin]);

        return parent::setPwdAdmin($pwdAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getConnect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConnect', []);

        return parent::getConnect();
    }

    /**
     * {@inheritDoc}
     */
    public function setConnect($connect)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConnect', [$connect]);

        return parent::setConnect($connect);
    }

}
